////////////////////////////////////////////////////////////////////////////////////
// This file is generated by the SystemC Builder
// Based on the following files:
// addCP/addCP.cpp
// Author: Jie Lei
// Date: 12/03/2024
////////////////////////////////////////////////////////////////////////////////////
#include "addCP.hpp"

// This is the testbench for testing the addCP module
int main(void) {
    // Define the input and output data
    stream<cmpxDataIn> inData[NUM_STRM];
    stream<comp16_t> outData[NUM_STRM];
    cmpxDataIn inDataBuf[NUM_STRM][NUM_TOTAL_SYMBOLS][FFT_LENGTH];
    comp16_t outDataBuf[NUM_STRM][NUM_TOTAL_SYMBOLS][SYMBOL_LENGTH];
    cmpxDataIn tmpInData;
    comp16_t tmpOutData;
    //Reading the file from .txt file
    FILE *fp_in;
    fp_in = fopen("data4addCP.txt", "r");
    if (fp_in == NULL) {
        printf("FILE NOT FOUND\n");// Error, file not found
        return 1;
    }
    float rm, im;    
    for (int j = 0; j < NUM_TOTAL_SYMBOLS; j++) {
        for (int i = 0; i < NUM_STRM; i++) {
            for (int k = 0; k < FFT_LENGTH; k++) {
                fscanf(fp_in, "%f%fi\t", &rm, &im);
                tmpInData = {rm, im};
                inDataBuf[i][j][k] = tmpInData;
                inData[i].write(tmpInData);
            }
            fscanf(fp_in,"\n");
        }
    }
    fclose(fp_in);
    // Call the addCP function
    addCP(inData, outData);
    // Write the output data to the .txt file
    FILE *fp_out;
    fp_out = fopen("outData.txt", "w");
    if (fp_out == NULL) {
        printf("FILE NOT FOUND\n");// Error, file not found
        return 1;
    }
    for (int j = 0; j < NUM_TOTAL_SYMBOLS; j++) {
        for (int i = 0; i < NUM_STRM; i++) {
            for (int k = 0; k < SYMBOL_LENGTH; k++) {
                tmpOutData = outData[i].read();
                outDataBuf[i][j][k] = tmpOutData;
                fprintf(fp_out, "%f%+fi\t", (float)tmpOutData.real(), (float)tmpOutData.imag());
            }
            fprintf(fp_out,"\n");
        }
    }
    fclose(fp_out);
    // Read the reference data from the .txt file
    FILE *fp_ref;
    fp_ref = fopen("refData_addCP.txt", "r");
    if (fp_ref == NULL) {
        printf("FILE NOT FOUND\n");// Error, file not found
        return 1;
    }
    comp16_t refData[NUM_STRM][NUM_TOTAL_SYMBOLS][SYMBOL_LENGTH];
    float refRm, refIm;
    for (int j = 0; j < NUM_TOTAL_SYMBOLS; j++) {
        for (int i = 0; i < NUM_STRM; i++) {
            for (int k = 0; k < SYMBOL_LENGTH; k++) {
                fscanf(fp_ref, "%f%fi\t", &refRm, &refIm);
                refData[i][j][k] = {refRm, refIm};
            }
            fscanf(fp_ref,"\n");
        }
    }
    fclose(fp_ref);

    // Compare the generated .txt file with the reference .txt file
    int err = 0;
    for (int j = 0; j < NUM_TOTAL_SYMBOLS; j++) {
        for (int i = 0; i < NUM_STRM; i++) {
            for (int k = 0; k < SYMBOL_LENGTH; k++) {
                if (refData[i][j][k] != outDataBuf[i][j][k]) {
                    err++;
                    printf("Error: outDataBuf[%d][%d][%d] = %f%+fi, refData[%d][%d][%d] = %f%+fi\n", i, j, k, (float)outDataBuf[i][j][k].real(), (float)outDataBuf[i][j][k].imag(), i, j, k, (float)refData[i][j][k].real(), (float)refData[i][j][k].imag());
                }
            }
        }
    }
    if (err == 0) {
        printf("Test passed\n");
    } else {
        printf("Test failed\n");
    }
    return err;
}
