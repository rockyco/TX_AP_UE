////////////////////////////////////////////////////////////////////////////////////
// This file contains the implementation of the class feedbackPrecoder.
// The feedbackPrecoder class is used to encapsulate the data and metadata for a
// single frame of data to be transmitted.
// Author: Jie Lei
// Date: 07/03/2024
////////////////////////////////////////////////////////////////////////////////////
#include "feedbackPrecoder.hpp"

void feedbackPrecoder(stream<comp17_t>& matFDPrec, stream<comp16_t> phaseRotData[NUM_STRM], stream<comp16_t> fdPrecData[NUM_STRM])
{
    comp17_t coefLTS[NUM_STRM][NUM_LTS*NUM_USED_SUBC] = {
        {comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0),
         comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0),
         comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0),
         comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0),
         comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0),
         comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0),
         comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0),
         comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0), comp17_t(1.0,0.0)},

        {comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625),
         comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625),
         comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(1.0,0.0), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(1.0,0.0), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,1.0), comp17_t(-0.70709228515625,0.70709228515625),
         comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625),
         comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625),
         comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625),
         comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(1.0,0.0), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(1.0,0.0), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,1.0), comp17_t(-0.70709228515625,0.70709228515625),
         comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,1.0), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-1.0,0.0), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.0,-1.0), comp17_t(0.70709228515625,-0.70709228515625)},

        {comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875),
         comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875),
         comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875),
         comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875),
         comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875),
         comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875),
         comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875),
         comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.0,-1.0), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(0.0,1.0), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(-0.92388916015625,0.3826904296875)},

        {comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625),
         comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625),
         comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625),
         comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625),
         comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625), comp17_t(-1.0,0.0), comp17_t(1.0,0.0), comp17_t(-0.3826904296875,-0.92388916015625), comp17_t(-0.70709228515625,0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(0.70709228515625,0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625),
         comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625),
         comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625),
         comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(0.92388916015625,0.3826904296875), comp17_t(0.0,-1.0), comp17_t(0.92388916015625,-0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(-0.3826904296875,0.92388916015625), comp17_t(1.0,0.0), comp17_t(-1.0,0.0), comp17_t(0.3826904296875,0.92388916015625), comp17_t(0.70709228515625,-0.70709228515625), comp17_t(-0.92388916015625,-0.3826904296875), comp17_t(0.0,1.0), comp17_t(-0.92388916015625,0.3826904296875), comp17_t(-0.70709228515625,-0.70709228515625), comp17_t(0.3826904296875,-0.92388916015625)}
    }; // Feedback precoding matrix
    comp17_t identMat[NUM_STRM][NUM_STRM] = {
        {comp17_t(1.0,0.0), comp17_t(0.0,0.0), comp17_t(0.0,0.0), comp17_t(0.0,0.0)},
        {comp17_t(0.0,0.0), comp17_t(1.0,0.0), comp17_t(0.0,0.0), comp17_t(0.0,0.0)},
        {comp17_t(0.0,0.0), comp17_t(0.0,0.0), comp17_t(1.0,0.0), comp17_t(0.0,0.0)},
        {comp17_t(0.0,0.0), comp17_t(0.0,0.0), comp17_t(0.0,0.0), comp17_t(1.0,0.0)}
    }; // Identity matrix
    comp17_t fdPrec[NUM_STRM][NUM_STRM];
    comp17_t tmpComp, tmpInComp;
    comp16_t tmpOutComp;
    comp17_t tmpAccum[NUM_STRM];
    fixed17_t realPart, imagPart;
    // Load the feedback precoding matrix from interface
    for (int i = 0; i < NUM_STRM; i++) {
        for (int j = 0; j < NUM_STRM; j++) {
            fdPrec[i][j] = matFDPrec.read();
        }
    }
    // Apply the feedback precoding matrix
    for (int i = 0; i < NUM_TOTAL_SYMBOLS; i++) {
        for (int j = 0; j < NUM_USED_SUBC; j++) {
            for (int k = 0; k < NUM_STRM; k++) {
                tmpAccum[k] = comp17_t(0.0,0.0);
            }
            for (int k = 0; k < NUM_STRM; k++) {
                if (i < NUM_LTS) {
                    tmpComp = coefLTS[k][i*NUM_USED_SUBC+j];
                    realPart = tmpComp.real() / 2;
                    imagPart = tmpComp.imag() / 2;
                    tmpInComp = comp17_t(realPart, imagPart);
                } else {
                    tmpInComp = (comp17_t)phaseRotData[k].read();
                }
                for (int l = 0; l < NUM_STRM; l++) {
                    if (j == SELECT_SUBC) {
                        tmpAccum[l] += identMat[l][k]*tmpInComp;
                    } else {
                        tmpAccum[l] += fdPrec[l][k]*tmpInComp;
                    }
                }
            }
            for (int k = 0; k < NUM_STRM; k++) {
                tmpOutComp = (comp16_t)tmpAccum[k];
                fdPrecData[k].write(tmpOutComp);
            }
        }
    }
}